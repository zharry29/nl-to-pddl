(define (domain comet-survival)
  (:requirements :strips :typing)
  (:types location object - thing)
  (:predicates 
    (at ?o - object ?l - location)
    (safe ?l - location)
    (food ?o - object)
    (water ?o - object)
    (medicine ?o - object)
    (supplies ?o - object)
    (weapon ?o - object)
    (ammunition ?o - object)
    (generator ?o - object)
    (fuel ?o - object)
    (radio ?o - object)
    (communication ?l - location)
    (environment ?l - location)
    (human ?o - object)
    (mentally-healthy ?o - object)
    (air-monitor ?o - object)
    (fire ?l - location)
    (flooding ?l - location)
    (acid-rain ?l - location)
    (pyrotoxins ?o - object)
    (scavenge ?o - object ?l - location)
    (defend-yourself ?o - object)
    (resolve-peacefully ?o - object)
    (share-resources ?o - object)
    (hunger ?o - object)
    (survivor ?o - object)
    (fertile-place ?l - location)
    (plant-seeds ?o - object)
    (governance-system ?o - object)
    (vote ?o - object)
    (decision-maker ?o - object)
    (less-fighting ?o - object)
  )
  (:action move
    :parameters (?o - object ?from - location ?to - location)
    :precondition (and (at ?o ?from) (safe ?to) (not (at ?o ?to)))
    :effect (and (at ?o ?to) (not (at ?o ?from)))
  )
  (:action listen-to-predictions
    :parameters (?o - object)
    :precondition (at ?o ?l)
    :effect (and (know-about-potential-collisions ?o) (develop-sense-of-time ?o))
  )
  (:action move-to-bunker
    :parameters (?o - object ?from - location ?to - location)
    :precondition (and (at ?o ?from) (defend-yourself ?o) (safe ?to) (not (at ?o ?to)))
    :effect (and (at ?o ?to) (not (at ?o ?from)))
  )
)